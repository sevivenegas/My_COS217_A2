Assignment 2 readme File

------------------------------------------------------------------------
What is your name?

Sevastian Venegas

------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

Lecture/precept notes, terminal man, TAs/Office Hours

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
In fulfillment of the requirement from section 2.4.3 of the Academic
Regulations in Princeton's Rights, Rules, Responsibilities guide,
enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

Sevastian Venegas

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

I think overall this assignment was a bit tedious but enjoyable. It may 
have been a bit helpfule to include the exact explanation of how to use 
test as it took me a bit a too realize I had to compile files together. 

I think after this assignment I understand the relationship of memory,
pointers, and arrays pretty well. Especially, since I found them a bit
confusing at the begining. 

The assignment was very fun minus the time it took to debug replace.c.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on stra.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None.

------------------------------------------------------------------------
What warnings does critTer generate on stra.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None.

------------------------------------------------------------------------
What warnings does splint generate on strp.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

strp.c: (in function Str_search)
  strp.c:105:20: Pointer arithmetic involving possibly null pointer
                    last_occurence: last_occurence + 1
    Pointer arithmetic using a possibly null pointer and integer. (Use
    -nullptrarith to inhibit warning)

line 105:
haystack = last_occurence + 1;

This warning occurs due to the possibility of last_occurence pointing at a 
NULL. However, due to the structure of the program this is not possible as
in my program haystack moves forward past last_occurence. Haystack only moves 
forward one until worse case it is equal to '\0' then it breaks out a loop.
Therefore last_occurence cannot even be a '\0' or NULL, since the pointer
ahead of it can equal neither. This line simply moves haystack back for special
test cases. (refer to code for better detail).

------------------------------------------------------------------------
What warnings does critTer generate on strp.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None.

------------------------------------------------------------------------
What warnings does splint generate on replace.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

Minus the one from compiling with strp.c. None.


------------------------------------------------------------------------
What warnings does critTer generate on replace.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None.

------------------------------------------------------------------------
Is it possible for Str_copy or Str_concat to call assert to verify
that the destination memory area specified by the caller is large
enough? Explain.

No. The reason is because both sizeOf and getLength will not be useful
in determining if the returned string will have enough bytes/memory. 
Since we are passing in pointers into the functions if we attempt to 
assert using sizeOf(pointer) we always recieve a true. This is due to
the fact the size of a pointer is always 8 bytes therefore assert will
always be true even when there is not enough space. GetLength will also
work as it accuires the length of a string through counting each index 
until reaches '\0'. As a result, we have no idea if the getlengthed 
string has enough or even has allocated memory follwing '\0' to store
the other string or copy.

------------------------------------------------------------------------
